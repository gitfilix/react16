react hooks
------------

array destructuring:
good defition:
it allows us to take elements in an array and put in into sepereate variables!

repetion:
functional components ('dumb'):
-------------------------------
- only props in -> jsx out
- presentational
- focus on one purpose

--> here HOOKS comes into play!

classbased components
----------------------
- use state and props
- buisnes logic
- organises other components
- lifecycle hooks



1.react hooks are functions.
2. can be used inside functional components to make them more
3. syntax: 'named useXYZ()'
4. re-useable
5. allow to share stateful and logic across components
6. managing state and side effects



// useState hook

- always returns array with two elements [current-state SNAP Shot, function to update]
- manage state in functional components
- survives re-render cycle
- is an array with EXACTLY two elements: [statePointer, stateUdateFunction]


// useEffect hook
for so-called 'side-effects'
will be executed AFTER! every render-cycle of the component. 
It acts lice componentDidUpdate. (after every component update)

first argumen is a function
second argument is array ->  dependencies-array [] 
-> [] empty array means runs only after first render-cycle
